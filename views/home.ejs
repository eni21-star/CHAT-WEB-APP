<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <title>Chat App</title>
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins&display=swap');
        * {
            box-sizing: border-box;
        }
        
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f5f5f5;
        }
        
        .container {
            width: 80%;
            max-height: auto;
            max-width: 600px;
            border: 1px solid #ddd;
            border-radius: 5px;
            background-color: #f8f8f8;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            
        }
        
        .chat-box {
            display: flex;
            flex-direction: column;
            height: auto;
            background-color: rgb(255, 255, 255);
        
        }
        
        .chat-header {
            padding: 10px;
            background-color: #333;
            color: #fff;
        }
        
        .chat-content {
            display: flex;
            height: 350px;
            flex-direction: column;
            padding: 10px;
            overflow-y: auto;
            
        }
        .message {
            max-width: 80%; 
            padding: 10px;
            padding-left: 20px; 
            padding-right: 20px;
            margin-bottom: 10px;
            border-radius: 5px;
        }
        
        .user-message {
            background-color: #dcf8c6;
            width: 100%;
            padding: 8px;
            font-family: 'Poppins', sans-serif;
            margin-bottom: 4px;
            border-radius: 14px;
            display: flex;
            justify-content: left;
            flex-direction: column;
            justify-content: space-evenly;
        }
        
        
        .chat-input {
            padding: 10px;
            display: flex;
            background-color: #333;
            border-top: 1px solid #ddd;
        }
        
        .chat-input input {
            padding: 5px;
            width: 100%;
            background: transparent;
            height: 55px;
            font-family: 'Poppins', sans-serif;
            border: none;
            outline: none;
            font-size: 15px;
            color:  white;
            border-radius: 5px;
        }
        
        .send-icon{
            background-color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 15px;
            width: 55px;
            cursor: pointer;
        }
        .user-name-chat {
            margin-bottom: -5PX;
        }
        .user-name-chat p {
            font-size: 10px;
            text-align: left;
            margin-bottom: -5PX;
            color: rgb(64, 0, 255);

        }</style>
</head>
<body>
    <div class="container">
        <div class="chat-box">
            <div class="chat-header">
                <h2>Chat Room</h2>
            </div>
            <div class="chat-content" id="chat-content">
                
                
            </div>
            <div class="chat-input">
                <input type="text" placeholder="Type your message here..." id="input-text">
                <div class="send-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class=" bi-send-fill" viewBox="0 0 16 16">
                        <path d="M15.964.686a.5.5 0 0 0-.65-.65L.767 5.855H.766l-.452.18a.5.5 0 0 0-.082.887l.41.26.001.002 4.995 3.178 3.178 4.995.002.002.26.41a.5.5 0 0 0 .886-.083zm-1.833 1.89L6.637 10.07l-.215-.338a.5.5 0 0 0-.154-.154l-.338-.215 7.494-7.494 1.178-.471z"/>
                      </svg>
                </div>
            </div>
        </div>
    </div>
    
    <script src="/socket.io/socket.io.js"></script>
    <script >
        
const inputBox = document.getElementById("input-text");
const chatappend = document.getElementById('chat-content');

//message.innerHTML = `<p> caleb jhor </p>`

const socket = io();
socket.on("user-join", (e) => {
    console.log(e);

    const friendMsg = document.createElement('div');
    friendMsg.classList.add('user-message');
    friendMsg.innerHTML = `<div class="user-name-chat">
                <p>ENIOLA</p>
                </div>
            <p>  ${e}</p>`;
    chatappend.appendChild(friendMsg);

    chatappend.scrollTop = chatappend.scrollHeight;
})


inputBox.addEventListener("keyup", async (e) => {
    if (e.key === "Enter" && inputBox.value) {

        socket.emit("user-chat", inputBox.value);

        // console.log(message);


        // console.log(res.userMsg);


        retrieveData();



        chatappend.scrollTop = chatappend.scrollHeight; // adjust the scroll for each user, like it adjust the text
        inputBox.value = "";

    }
    else {

    }

})

retrieveDataReload();
async function retrieveData() {


    const msgArray = [];
    const apiurl = "http://localhost:5000/retrieve1";
    const msgDb = await fetch(apiurl);
    const ress = await msgDb.json();
    console.log(ress);
    ress.forEach(ress => {
        //console.log(ress.userMsg);
        msgArray.push(ress.userMsg);

        //console.log(ress.userMsg);
    });
    console.log(msgArray);
    //console.log(msgID);
  
    for (let i = 0; i < msgArray.length; i++) {
        // Check if the index i is not already present in msgIDC
        
            const chat = document.createElement('div');
            chat.classList.add('user-message');
            chat.innerHTML = `<div class="user-name-chat">
                <p>ENIOLA</p>
                </div>
            <p>  ${msgArray[i]}</p>`;
    
            chatappend.appendChild(chat);
            chatappend.scrollTop = chatappend.scrollHeight;
            
    
            // Add the index i to msgIDC
           // msgIDC.push(i);
            //console.log(msgIDC);
        
    }
    
    

    // chatappend.appendChild(chat);
}



async function retrieveDataReload() {


    const msgArray = [];
    const msgID = [];
    const msgIDC = [];
    const apiurl = "http://localhost:5000/retrieve";
    const msgDb = await fetch(apiurl);
    const ress = await msgDb.json();
    console.log(ress);
    ress.forEach(ress => {
        //console.log(ress.userMsg);
        msgArray.push(ress.userMsg);
        msgID.push(ress._id);

        //console.log(ress.userMsg);
    });
    console.log(msgArray);
    //console.log(msgID);
  
    for (let i = 0; i < msgArray.length; i++) {
        // Check if the index i is not already present in msgIDC
        
            const chat = document.createElement('div');
            chat.classList.add('user-message');
            chat.innerHTML = `<p>  ${msgArray[i]}</p>`;
    
            chatappend.appendChild(chat);
            chatappend.scrollTop = chatappend.scrollHeight;
    
            // Add the index i to msgIDC
           // msgIDC.push(i);
            //console.log(msgIDC);
        
    }
    
    

    // chatappend.appendChild(chat);
}

    </script>
</body>
</html>